format_version: 4
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - BITRISE_STEP_ID: datadog-mobile-app-upload
  - BITRISE_STEP_VERSION: "1.0.2"
  - BITRISE_STEP_GIT_CLONE_URL: https://github.com/DataDog/synthetics-test-automation-bitrise-step-upload-application.git
  - MY_STEPLIB_REPO_FORK_GIT_URL: $MY_STEPLIB_REPO_FORK_GIT_URL

trigger_map:
- push_branch: '*'
  pipeline: test-on-Ubuntu-and-Xcode-stacks
pipelines:
  test-on-Ubuntu-and-Xcode-stacks:
    stages:
    - test-stacks: {}
stages:
  test-stacks:
    workflows:
    - test-on-Ubuntu-stack: {}
    - test-on-Xcode-stack: {}

meta:
  bitrise.io:
    stack: linux-docker-android-22.04
    machine_type_id: standard

workflows:
  test-on-Ubuntu-stack:
    steps:
    - script:
        title: Generate version name from timestamp
        inputs:
        - content: |-
            #!/bin/bash
            export APPLICATION_VERSION_NAME="$(date +%s)"
            echo "Generated version_name: $APPLICATION_VERSION_NAME"
            envman add --key APPLICATION_VERSION_NAME --value "$APPLICATION_VERSION_NAME"
    # - activate-ssh-key@4: {}
    # - git-clone@8: {}
    - git::https://github.com/DataDog/synthetics-test-automation-bitrise-step-upload-application.git:
        title: Upload Android application
        inputs:
        - api_key: $DATADOG_API_KEY
        - app_key: $DATADOG_APP_KEY
        - mobile_application_version_file_path: "/bitrise/src/example-app.apk"
        - mobile_application_id: "7b54b434-59ea-4ef7-868b-12c9180842f7"
        - version_name: "$APPLICATION_VERSION_NAME"
        outputs:
        - DATADOG_UPLOADED_APPLICATION_VERSION_ID: DATADOG_UPLOADED_APPLICATION_VERSION_ID
    - script:
      title: Look around
      inputs:
      - content: |-
          #!/bin/bash
          pwd
          ls -lha
    - datadog-mobile-app-run-tests@1:
        title: Run Android tests
        inputs:
        - api_key: $DATADOG_API_KEY
        - app_key: $DATADOG_APP_KEY
        - public_ids: "rxd-vdv-qce"
        - mobile_application_version: $DATADOG_UPLOADED_APPLICATION_VERSION_ID
        - fail_on_critical_errors: true
    - path::./:
        title: Upload iOS application
        inputs:
        - api_key: $DATADOG_API_KEY
        - app_key: $DATADOG_APP_KEY
        - mobile_application_version_file_path: "/bitrise/src/example-app.ipa"
        - mobile_application_id: "bcb5d107-5536-4fe5-a4a8-ea34a6c9bbee"
        - version_name: "$APPLICATION_VERSION_NAME"
        outputs:
        - DATADOG_UPLOADED_APPLICATION_VERSION_ID: DATADOG_UPLOADED_APPLICATION_VERSION_ID
    - datadog-mobile-app-run-tests@1:
        title: Run iOS tests
        inputs:
        - api_key: $DATADOG_API_KEY
        - app_key: $DATADOG_APP_KEY
        - public_ids: "bcq-y54-rq7"
        - mobile_application_version: $DATADOG_UPLOADED_APPLICATION_VERSION_ID
        - fail_on_critical_errors: true

  test-on-Xcode-stack:
    meta:
      bitrise.io:
        stack: osx-xcode-edge
        machine_type_id: g2-m1.4core
    steps:
    - script:
        title: Generate version name from timestamp
        inputs:
        - content: |-
            #!/bin/bash
            export APPLICATION_VERSION_NAME="$(date +%s)"
            echo "Generated version_name: $APPLICATION_VERSION_NAME"
            envman add --key APPLICATION_VERSION_NAME --value "$APPLICATION_VERSION_NAME"
    - activate-ssh-key@4: {}
    - git-clone@8: {}
    - path::/Users/vagrant/git:
        title: Upload Android application
        inputs:
        - api_key: $DATADOG_API_KEY
        - app_key: $DATADOG_APP_KEY
        - mobile_application_version_file_path: "/Users/vagrant/git/example-app.apk"
        - mobile_application_id: "7b54b434-59ea-4ef7-868b-12c9180842f7"
        - version_name: "$APPLICATION_VERSION_NAME"
        outputs:
        - DATADOG_UPLOADED_APPLICATION_VERSION_ID: DATADOG_UPLOADED_APPLICATION_VERSION_ID
    - datadog-mobile-app-run-tests@1:
        title: Run Android tests
        inputs:
        - api_key: $DATADOG_API_KEY
        - app_key: $DATADOG_APP_KEY
        - public_ids: "rxd-vdv-qce"
        - mobile_application_version: $DATADOG_UPLOADED_APPLICATION_VERSION_ID
        - fail_on_critical_errors: true
    - path::/Users/vagrant/git:
        title: Upload iOS application
        inputs:
        - api_key: $DATADOG_API_KEY
        - app_key: $DATADOG_APP_KEY
        - mobile_application_version_file_path: "/Users/vagrant/git/example-app.ipa"
        - mobile_application_id: "bcb5d107-5536-4fe5-a4a8-ea34a6c9bbee"
        - version_name: "$APPLICATION_VERSION_NAME"
        outputs:
        - DATADOG_UPLOADED_APPLICATION_VERSION_ID: DATADOG_UPLOADED_APPLICATION_VERSION_ID
    - datadog-mobile-app-run-tests@1:
        title: Run iOS tests
        inputs:
        - api_key: $DATADOG_API_KEY
        - app_key: $DATADOG_APP_KEY
        - public_ids: "bcq-y54-rq7"
        - mobile_application_version: $DATADOG_UPLOADED_APPLICATION_VERSION_ID
        - fail_on_critical_errors: true



  # ----------------------------------------------------------------
  # --- workflows to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml

  share-this-step:
    envs:
      - MY_STEPLIB_REPO_FORK_GIT_URL: $MY_STEPLIB_REPO_FORK_GIT_URL
      - BITRISE_STEP_ID: $BITRISE_STEP_ID
      - BITRISE_STEP_VERSION: $BITRISE_STEP_VERSION
      - BITRISE_STEP_GIT_CLONE_URL: $BITRISE_STEP_GIT_CLONE_URL
    description: |-
      If this is the first time you try to share a Step you should
      first call: $ bitrise share

      This will print you a guide, and information about how Step sharing
      works. Please read it at least once!

      As noted in the Step sharing guide you'll have to fork the
      StepLib you want to share this step into. Once you're done with forking
      the repository you should set your own fork's git clone URL
      in the `.bitrise.secrets.yml` file, or here in the `envs` section,
      as the value of the `MY_STEPLIB_REPO_FORK_GIT_URL` environment.

      You're now ready to share this Step, just make sure that
      the `BITRISE_STEP_ID` and `BITRISE_STEP_VERSION`
      environments are set to the desired values!

      To share this Step into a StepLib you can just run: $ bitrise run share-this-step

      Once it finishes the only thing left is to actually create a Pull Request,
      the way described in the guide printed at the end of the process.
    before_run:
    - audit-this-step
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            bitrise share start -c "${MY_STEPLIB_REPO_FORK_GIT_URL}"
            bitrise share create --stepid "${BITRISE_STEP_ID}" --tag "${BITRISE_STEP_VERSION}" --git "${BITRISE_STEP_GIT_CLONE_URL}"
            bitrise share finish
